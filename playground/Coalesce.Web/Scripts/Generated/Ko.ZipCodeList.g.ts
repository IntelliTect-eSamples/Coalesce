
/// <reference path="../coalesce.dependencies.d.ts" />

// Generated by IntelliTect.Coalesce

module ListViewModels {
    
    export namespace ZipCodeDataSources {
        export class Default extends Coalesce.DataSource<ViewModels.ZipCode> { }
    }
    
    export class ZipCodeList extends Coalesce.BaseListViewModel<ViewModels.ZipCode> {
        public readonly modelName: string = "ZipCode";
        public readonly apiController: string = "/ZipCode";
        public modelKeyName: string = "zip";
        public itemClass: new () => ViewModels.ZipCode = ViewModels.ZipCode;
        
        public filter: {
            zip?: string;
            state?: string;
        } | null = null;
        
        /** The namespace containing all possible values of this.dataSource. */
        public dataSources: typeof ZipCodeDataSources = ZipCodeDataSources;
        
        /** The data source on the server to use when retrieving objects. Valid values are in this.dataSources. */
        public dataSource: Coalesce.DataSource<ViewModels.ZipCode> = new this.dataSources.Default();
        
        /** Configuration for all instances of ZipCodeList. Can be overidden on each instance via instance.coalesceConfig. */
        public static coalesceConfig = new Coalesce.ListViewModelConfiguration<ZipCodeList, ViewModels.ZipCode>(Coalesce.GlobalConfiguration.listViewModel);
        
        /** Configuration for this ZipCodeList instance. */
        public coalesceConfig: Coalesce.ListViewModelConfiguration<ZipCodeList, ViewModels.ZipCode>
            = new Coalesce.ListViewModelConfiguration<ZipCodeList, ViewModels.ZipCode>(ZipCodeList.coalesceConfig);
        
        
        protected createItem = (newItem?: any, parent?: any) => new ViewModels.ZipCode(newItem, parent);
        
        constructor() {
            super();
        }
    }
}
