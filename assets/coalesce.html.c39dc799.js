import{_ as a,r as s,o as l,c as n,b as e,d as t,e as c,w as i}from"./app.33ffcc50.js";const d={},r=e("h1",{id:"coalesce",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#coalesce","aria-hidden":"true"},"#"),t(" [Coalesce]")],-1),h=e("p",null,"Used to mark a type or member for generation by Coalesce.",-1),u=e("p",null,[t("Some types and members will be implicitly included in generation - for example, all types represented by a "),e("code",null,"DbSet<T>"),t(" on a "),e("code",null,"DbContext"),t(" that has a "),e("code",null,"[Coalesce]"),t(" attribute will automatically be included. Properties on these types will also be generated for unless explicitly excluded, since this is by far the most common usage scenario in Coalesce.")],-1),p=e("code",null,"[Coalesce]",-1),m=e("p",null,[t("The documentation pages for types and members that require/accept this attribute will state as such. An exhaustive list of all valid targets for "),e("code",null,"[Coalesce]"),t(" will not be found on this page.")],-1);function _(b,f){const o=s("RouterLink");return l(),n("div",null,[r,h,u,e("p",null,[t("On the other hand, "),c(o,{to:"/modeling/model-components/methods.html"},{default:i(()=>[t("Methods")]),_:1}),t(" on these types will not have endpoints generated unless they are explicitly annotated with "),p,t(" to avoid accidentally exposing methods that were perhaps not intended to be exposed.")]),m])}const x=a(d,[["render",_],["__file","coalesce.html.vue"]]);export{x as default};
