import{_ as d,r as l,o as p,c as i,f as c,b as a,d as e,e as s,w as n,a as m}from"./app.33ffcc50.js";const u={},D=a("h1",{id:"c-admin-methods",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#c-admin-methods","aria-hidden":"true"},"#"),e(" c-admin-methods")],-1),h={href:"https://vuetifyjs.com/",target:"_blank",rel:"noopener noreferrer"},y={href:"https://vuetifyjs.com/en/components/expansion-panels/",target:"_blank",rel:"noopener noreferrer"},v=m(`<h2 id="examples" tabindex="-1"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h2><div class="language-vue-html line-numbers-mode" data-ext="vue-html"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">c-admin-methods</span><span style="color:#D4D4D4;"> :</span><span style="color:#9CDCFE;">model</span><span style="color:#D4D4D4;">=</span><span style="color:#D4D4D4;">&quot;</span><span style="color:#9CDCFE;">person</span><span style="color:#D4D4D4;">&quot;</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">class</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;x&quot;</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">auto-reload-model</span><span style="color:#D4D4D4;"> /</span><span style="color:#808080;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-vue-html line-numbers-mode" data-ext="vue-html"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">c-admin-methods</span><span style="color:#D4D4D4;"> :</span><span style="color:#9CDCFE;">model</span><span style="color:#D4D4D4;">=</span><span style="color:#D4D4D4;">&quot;</span><span style="color:#9CDCFE;">person</span><span style="color:#D4D4D4;">&quot;</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">auto-reload-model</span><span style="color:#D4D4D4;"> /</span><span style="color:#808080;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-vue-html line-numbers-mode" data-ext="vue-html"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">c-admin-methods</span><span style="color:#D4D4D4;"> :</span><span style="color:#9CDCFE;">model</span><span style="color:#D4D4D4;">=</span><span style="color:#D4D4D4;">&quot;</span><span style="color:#9CDCFE;">personList</span><span style="color:#D4D4D4;">&quot;</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">auto-reload-model</span><span style="color:#D4D4D4;"> /</span><span style="color:#808080;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="props" tabindex="-1"><a class="header-anchor" href="#props" aria-hidden="true">#</a> Props</h2>`,5),_=a("p",null,[e("True if the "),a("code",null,"model"),e(" should have its "),a("code",null,"$load"),e(" invoked after a successful invocation of any method.")],-1);function f(C,E){const t=l("ExternalLinkIcon"),o=l("RouterLink"),r=l("Prop");return p(),i("div",null,[D,c(" MARKER:summary "),a("p",null,[e("Renders in a "),a("a",h,[e("Vuetify"),s(t)]),e(),a("a",y,[e("v-expansion-panels"),s(t)]),e(" a "),s(o,{to:"/stacks/vue/coalesce-vue-vuetify/components/c-admin-method.html"},{default:n(()=>[e("c-admin-method")]),_:1}),e(" for each method on a "),s(o,{to:"/stacks/vue/layers/viewmodels.html"},{default:n(()=>[e("ViewModel")]),_:1}),e(" or "),s(o,{to:"/stacks/vue/layers/viewmodels.html"},{default:n(()=>[e("ListViewModel")]),_:1}),e(".")]),c(" MARKER:summary-end "),v,s(r,{def:"model: ViewModel | ListViewModel",lang:"ts"}),a("p",null,[e("An "),s(o,{to:"/stacks/vue/layers/viewmodels.html"},{default:n(()=>[e("ViewModel")]),_:1}),e(" or "),s(o,{to:"/stacks/vue/layers/viewmodels.html"},{default:n(()=>[e("ListViewModel")]),_:1}),e(" whose methods should each render as a "),s(o,{to:"/stacks/vue/coalesce-vue-vuetify/components/c-admin-method.html"},{default:n(()=>[e("c-admin-method")]),_:1}),e(".")]),s(r,{def:"autoReloadModel?: boolean = false",lang:"ts"}),_])}const b=d(u,[["render",f],["__file","c-admin-methods.html.vue"]]);export{b as default};
