import{_ as p,r as o,o as u,c as h,f as d,b as e,d as t,e as s,w as a,a as c}from"./app.33ffcc50.js";const m={},D=e("h1",{id:"c-datetime-picker",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#c-datetime-picker","aria-hidden":"true"},"#"),t(" c-datetime-picker")],-1),f=e("code",null,"v-model",-1),y={class:"table-of-contents"},_=c(`<h2 id="examples" tabindex="-1"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h2><div class="language-vue-html line-numbers-mode" data-ext="vue-html"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">c-datetime-picker</span><span style="color:#D4D4D4;"> :</span><span style="color:#9CDCFE;">model</span><span style="color:#D4D4D4;">=</span><span style="color:#D4D4D4;">&quot;</span><span style="color:#9CDCFE;">person</span><span style="color:#D4D4D4;">&quot;</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">for</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;birthDate&quot;</span><span style="color:#D4D4D4;"> /</span><span style="color:#808080;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">c-datetime-picker</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">v-model</span><span style="color:#D4D4D4;">=</span><span style="color:#D4D4D4;">&quot;</span><span style="color:#9CDCFE;">standaloneDate</span><span style="color:#D4D4D4;">&quot;</span><span style="color:#D4D4D4;"> /</span><span style="color:#808080;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">c-datetime-picker</span><span style="color:#D4D4D4;"> </span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">v-model</span><span style="color:#D4D4D4;">=</span><span style="color:#D4D4D4;">&quot;</span><span style="color:#9CDCFE;">standaloneTime</span><span style="color:#D4D4D4;">&quot;</span><span style="color:#D4D4D4;"> </span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">date-kind</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;time&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">date-format</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;h:mm a&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">/</span><span style="color:#808080;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="props" tabindex="-1"><a class="header-anchor" href="#props" aria-hidden="true">#</a> Props</h2>`,3),b=e("p",null,"A metadata specifier for the value being bound. One of:",-1),v=e("ul",null,[e("li",null,[t("A string with the name of the value belonging to "),e("code",null,"model"),t(".")]),e("li",null,"A direct reference to a metadata object."),e("li",null,"A string in dot-notation that starts with a type name.")],-1),g=e("p",null,[t("An object owning the value that was specified by the "),e("code",null,"for"),t(" prop. If provided, the input will be bound to the corresponding property on the "),e("code",null,"model"),t(" object.")],-1),k=e("p",null,[t("If binding the component with "),e("code",null,"v-model"),t(", accepts the "),e("code",null,"value"),t(" part of "),e("code",null,"v-model"),t(".")],-1),C=e("p",null,[t("Whether the date is only a date, only a time, or contains significant date "),e("code",null,"and"),t(" time information.")],-1),w=e("code",null,"for",-1),E=c("<p>The format of the date that will be rendered in the component&#39;s text field, and the format that will be attempted first when parsing user input in the text field.</p><p>Defaults to:</p><ul><li><code>M/d/yyyy h:mm a</code> if <code>dateKind == &#39;datetime&#39;</code>,</li><li><code>M/d/yyyy</code> if <code>dateKind == &#39;date&#39;</code>, or</li><li><code>h:mm a</code> if <code>dateKind == &#39;time&#39;</code>.</li></ul>",3),x={class:"custom-container warning"},q=e("p",{class:"custom-container-title"},"WARNING",-1),F=e("p",null,[t("When parsing a user's text input into the text field, c-datetime-picker will first attempt to parse it with the format specified by "),e("code",null,"dateFormat"),t(", or the default as described above if not explicitly specified.")],-1),T={href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/Date",target:"_blank",rel:"noopener noreferrer"},A=e("code",null,"dateKind",-1),R=e("code",null,"datetime",-1),I=e("code",null,"date",-1),K=e("p",null,"True if a native HTML5 input should be used instead of a popup menu with Vuetify date/time pickers inside of it.",-1),N=e("p",null,"True if the calendar and clock should be shown side by side in the picker menu, rather than in separate tabs.",-1),V=e("p",null,"True if the component should be read-only.",-1),M=e("p",null,"True if the component should be disabled.",-1);function P(L,S){const l=o("RouterLink"),i=o("router-link"),n=o("Prop"),r=o("ExternalLinkIcon");return u(),h("div",null,[D,d(" MARKER:summary "),e("p",null,[t("A general, all-purpose date/time input component that can be used either with "),s(l,{to:"/stacks/vue/layers/models.html"},{default:a(()=>[t("models")]),_:1}),t(" and "),s(l,{to:"/stacks/vue/layers/metadata.html"},{default:a(()=>[t("metadata")]),_:1}),t(" or as a standalone component using only "),f,t(".")]),d(" MARKER:summary-end "),e("nav",y,[e("ul",null,[e("li",null,[s(i,{to:"#examples"},{default:a(()=>[t("Examples")]),_:1})]),e("li",null,[s(i,{to:"#props"},{default:a(()=>[t("Props")]),_:1})])])]),_,s(n,{def:"for?: string | DateProperty | DateValue",lang:"ts"}),b,v,s(n,{def:"model?: Model | DataSource",lang:"ts"}),g,s(n,{def:"value?: Date",lang:"ts"}),k,s(n,{def:"dateKind?: 'date' | 'time' | 'datetime' = 'datetime'",lang:"ts"}),C,e("p",null,[t("If the component was bound with metadata using the "),w,t(" prop, this will default to the kind specified by "),s(l,{to:"/modeling/model-components/attributes/date-type.html"},{default:a(()=>[t("[DateType]")]),_:1}),t(".")]),s(n,{def:"dateFormat?: string",lang:"ts"}),E,e("div",x,[q,F,e("p",null,[t("If this fails, the date will be parsed with the "),e("a",T,[t("Date constructor"),s(r)]),t(", but only if the "),A,t(" is "),R,t(" or "),I,t(". This works fairly well on all modern browsers, but can still occasionally have issues. c-datetime-picker tries its best to filter out bad parses from the Date constructor, like dates with a year earlier than 1000.")])]),s(n,{def:"native?: boolean",lang:"ts"}),K,s(n,{def:"sideBySide?: boolean",lang:"ts"}),N,s(n,{def:"readonly?: boolean",lang:"ts"}),V,s(n,{def:"disabled?: boolean",lang:"ts"}),M])}const B=p(m,[["render",P],["__file","c-datetime-picker.html.vue"]]);export{B as default};
